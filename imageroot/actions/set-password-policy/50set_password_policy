#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import subprocess
import os

ppolicy = json.load(sys.stdin)
SECONDS_PER_DAY = 86400
ldap_suffix = os.environ["LDAP_SUFFIX"]

if ppolicy["expiration"]["enforced"] == True:
    pwd_min_age = ppolicy["expiration"]["min_age"] * SECONDS_PER_DAY
    pwd_max_age = ppolicy["expiration"]["max_age"] * SECONDS_PER_DAY
else:
    pwd_min_age = 0
    pwd_max_age = 0

if ppolicy["strength"]["enforced"] == True:
    pwd_in_history = ppolicy["strength"]["history_length"]
    pwd_min_length = ppolicy["strength"]["password_min_length"]
    pwd_check_quality = 2 if ppolicy["strength"]["complexity_check"] == True else 0
else:
    pwd_in_history = 0
    pwd_min_length = 0
    pwd_check_quality = 0

ldif_modify_input = f'''dn: cn=default,ou=PPolicy,{ldap_suffix}
changetype: modify
replace: pwdMinAge
pwdMinAge: {pwd_min_age}
-
replace: pwdMaxAge
pwdMaxAge: {pwd_max_age}
-
replace: pwdExpireWarning
pwdExpireWarning: {int(pwd_max_age * 0.25)}
-
replace: pwdInHistory
pwdInHistory: {pwd_in_history}
-
replace: pwdMinLength
pwdMinLength: {pwd_min_length}
-
replace: pwdCheckQuality
pwdCheckQuality: {pwd_check_quality}
'''

subprocess.run(["podman", "exec", "-i", "openldap", "ldapmodify"],
    input=ldif_modify_input, stdout=sys.stderr, text=True, check=True)
